-- Завдання 1. Незмінне оновлення елементів списку
updateAt :: Int -> a -> [a] -> [a]
updateAt _ _ [] = []
updateAt 0 newVal (x:xs) = newVal : xs
updateAt n newVal (x:xs)
    | n < 0 = x:xs
    | otherwise = x : updateAt (n-1) newVal xs

-- Завдання 4. Створення оновленої копії запису
data Person = Person { name :: String, age :: Int } deriving (Show, Eq)

incrementAge :: Person -> Person
incrementAge (Person n a) = Person n (a + 1)

-- Завдання 6. Видалення елемента з незмінного списку
removeAt :: Int -> [a] -> [a]
removeAt _ [] = []
removeAt 0 (x:xs) = xs
removeAt n (x:xs)
    | n < 0 = x:xs
    | otherwise = x : removeAt (n-1) xs

main :: IO ()
main = do
    putStrLn "Завдання 1: updateAt"
    print $ updateAt 1 99 [10, 20, 30]
    print $ updateAt 0 42 []
    print $ updateAt 5 7 [1,2,3]
    
    putStrLn "\nЗавдання 4: incrementAge"
    let p = Person "Anna" 25
    print $ incrementAge p
    print p
    
    putStrLn "\nЗавдання 6: removeAt"
    print $ removeAt 1 [10, 20, 30]
    print $ removeAt 5 [1, 2, 3]
